@model FiveMinute.ViewModels.AccountViewModels.AllUsersViewModel
@{
    ViewData["Title"] = "All Users";
}

<div class="container mt-4">
    <div class="row">
        <!-- Left Section: Teachers and Students Tables with Delete, Login, and Create Buttons -->
        <div class="col-md-9">
            <!-- Teachers Section -->
            <h2>Teachers</h2>
            <button class="btn btn-primary mb-2" onclick="openCreateModal('Teacher')">Create Teacher</button>
            <input type="text" id="teacherSearch" class="form-control mb-2" placeholder="Search Teachers" onkeyup="filterTable('teacherTable', 'teacherSearch')" />
            <table class="table table-striped" id="teacherTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var teacher in Model.Teachers)
                    {
                        <tr data-user-id="@teacher.Id">
                            <td>@teacher.Id</td>
                            <td>@teacher.UserName</td>
                            <td>@teacher.Email</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="deleteUser('@teacher.Id')">Delete</button>
                                <button class="btn btn-secondary btn-sm" onclick="loginAsUser('@teacher.Id')">Login</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Students Section -->
            <h2>Students</h2>
            <button class="btn btn-primary mb-2" onclick="openCreateModal('Student')">Create Student</button>
            <input type="text" id="studentSearch" class="form-control mb-2" placeholder="Search Students" onkeyup="filterTable('studentTable', 'studentSearch')" />
            <table class="table table-striped" id="studentTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model.Students)
                    {
                        <tr data-user-id="@student.Id">
                            <td>@student.Id</td>
                            <td>@student.UserName</td>
                            <td>@student.Email</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="deleteUser('@student.Id')">Delete</button>
                                <button class="btn btn-secondary btn-sm" onclick="loginAsUser('@student.Id')">Login</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



        <!-- Right Section: 1/4 Width for Admins -->
        <div class="col-md-3">
            <h2>Admins</h2>
            <table class="table table-striped" id="adminTable">
                <thead>
                    <tr>
                        <th>Username</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var admin in Model.Admins)
                    {
                        <tr>
                            <td>@admin.UserName</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Create New User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="createUserForm" method="post" action="/Account/CreateUser">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="text" class="form-control" id="username" name="UserName" required>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" name="Email" required>
                    </div>
                    <input type="hidden" id="role" name="Role">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create User</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function filterTable(tableId, searchInputId) {
        var input = document.getElementById(searchInputId);
        var filter = input.value.toLowerCase();
        var table = document.getElementById(tableId);
        var rows = table.getElementsByTagName("tr");

        for (var i = 1; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName("td");
            var match = false;

            for (var j = 0; j < cells.length; j++) {
                if (cells[j] && cells[j].innerText.toLowerCase().includes(filter)) {
                    match = true;
                    break;
                }
            }

            rows[i].style.display = match ? "" : "none";
        }
    }

    function deleteUser(userId) {
        if (confirm("Are you sure you want to delete this user?")) {
            console.log(userId);
            
            $.ajax({
                url: '/Account/Delete', // Adjust the URL to match your controller's route
                type: 'POST',
                data: JSON.stringify({ userId: userId }), // Send userId as JSON
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        alert("User deleted successfully.");
                        // Remove the deleted user's row from the table
                        $('tr').filter(`[data-user-id="${userId}"]`).remove();
                    } else {
                        alert(response.description || "Failed to delete the user.");
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while attempting to delete the user.");
                }
            });
        }
    }


    function loginAsUser(userId) {
        // Make an AJAX call or form submission to login as this user
        window.location.href = '/Account/LoginAs/' + userId;
    }

    function openCreateModal(role) {
        // Set the role in the hidden input for the form
        document.getElementById("role").value = role;
        document.getElementById("createUserModalLabel").innerText = "Create " + role;
        $('#createUserModal').modal('show');
    }
</script>
