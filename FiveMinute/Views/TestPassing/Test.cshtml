@{
    ViewData["Title"] = "TestPassing";
}

@using FiveMinutes.ViewModels
@using Microsoft.AspNetCore.Mvc.RazorPages
@model FiveMinutes.ViewModels.FiveMinuteViewModel

@* <style> *@
@*     .test-area { *@
@*         /*font-family: Arial, sans-serif;*/ *@
@*         line-height: 1.6; *@
@*         color: #333; *@
@*         background-color: #f4f4f4; *@
@*         max-width: 800px; *@
@*         margin: 0 auto; *@
@*         padding: 20px; *@
@*     } *@
@*     /*.container {*/ *@
@*     /*    background-color: #f4f4f4;*/ *@
@*     /*    padding: 20px;*/ *@
@*     /*    border-radius: 5px;*/ *@
@*     /*    box-shadow: 0 2px 5px rgba(0,0,0,0.1);*/ *@
@*     /*}*/ *@
@*     h1 { *@
@*         color: #2c3e50; *@
@*         text-align: center; *@
@*     } *@
@*     .question { *@
@*         margin-bottom: 20px; *@
@*         padding: 15px; *@
@*         background-color: #fff; *@
@*         border-radius: 5px; *@
@*         box-shadow: 0 1px 3px rgba(0,0,0,0.1); *@
@*     } *@
@*     .question-text { *@
@*         font-weight: bold; *@
@*         margin-bottom: 10px; *@
@*     } *@
@*     input[type="text"] { *@
@*         width: 100%; *@
@*         padding: 8px; *@
@*         margin-top: 5px; *@
@*         border: 1px solid #ddd; *@
@*         border-radius: 4px; *@
@*     } *@
@*     label { *@
@*         display: block; *@
@*         margin-bottom: 5px; *@
@*     } *@
@*     input[type="radio"], *@
@*     input[type="checkbox"] { *@
@*         margin-right: 5px; *@
@*     } *@
@*     input[type="submit"] { *@
@*         display: block; *@
@*         width: 100%; *@
@*         padding: 10px; *@
@*         background-color: #3498db; *@
@*         color: #fff; *@
@*         border: none; *@
@*         border-radius: 4px; *@
@*         cursor: pointer; *@
@*         font-size: 16px; *@
@*         transition: background-color 0.3s; *@
@*     } *@
@*     input[type="submit"]:hover { *@
@*         background-color: #2980b9; *@
@*     } *@
@*     @@media (max-width: 600px) { *@
@*         body { *@
@*             padding: 10px; *@
@*         } *@
@*         .container { *@
@*             padding: 10px; *@
@*         } *@
@*     } *@
@* </style> *@

<style>
    label{
        display:  block;
        margin-left: 5px;
    }
         .question { 
         margin-bottom: 20px;
         padding: 15px;
         background-color: #fff;
         border-radius: 5px;
         box-shadow: 0 1px 3px rgba(0,0,0,0.1);
     }
</style>

<div class="container test-area">
    <h1>@Model.Name</h1>
    <div>Оставшееся время:
        <div id="timer">5:00</div>
    </div>
    <form asp-action="SendTestResults" asp-controller="TestPassing" method="post">
        <input type="hidden" aria-label="" name="FMTId" value = "@Model.Id"/>
        <div style="margin-bottom: 10px">
            @{
                var userName = User.Identity?.Name ?? "";
            }
            <input class="form-control" type="text" name="UserName" @(userName == "" ? "" : "readonly") value="@(userName)"/>
        </div>
        
        @{
            var questionNumber = 0;
            var answerNumber = 0;
        }
        @foreach (var question in Model.Questions)
        {
            questionNumber++;
            <div class="question card mt-3 question-card border-secondary border-3">
                <h5 class="question-text card-title mb-2">@questionNumber. @question.QuestionText</h5>
                @{
                    int position;
                }
                @switch (question.ResponseType)
                {
                    case ResponseType.Text:
                        <div class="mb-3">
                            <input type="hidden" aria-label="" name="UserAnswers[@answerNumber].QuestionPosition" value="@questionNumber"/>
                            <input type="hidden" aria-label="" name="UserAnswers[@answerNumber].Position" value="0"/>
                            <input type="hidden" aria-label="" name="UserAnswers[@answerNumber].QuestionId" value="@question.Id"/>
                            <input type="text" aria-label="@question.QuestionText" name="UserAnswers[@answerNumber].Text"/>
                        </div>
                        answerNumber++;
                        break;
                    case ResponseType.SingleChoice:
                        <div class="card-body mb-3">
                            @{
                                position = 1;
                            }
                            <input type="hidden" name="UserAnswers[@answerNumber].QuestionPosition" value="@questionNumber"/>
                            <input type="hidden" name="UserAnswers[@answerNumber].Position" value="@position"/>
                            <input type="hidden" name="UserAnswers[@answerNumber].QuestionId" value="@question.Id"/>
                            @foreach (var answer in question.AnswerOptions)
                            {
                                <div class="form-check">

                                    <input type="radio" class="form-check-input" name="UserAnswers[@answerNumber].Text" value="@answer.Text"
                                           id="answer_@(questionNumber)_@(position)" onchange="setQuestionPosition(@position, this)">
                                    <label class="form-check-label" for="answer_@(questionNumber)_@(position)">
                                        @answer.Text
                                    </label>
                                </div>
                                // answerNumber++;
                                position++;
                            }
                        </div>
                        answerNumber++;
                        break;
                    case ResponseType.MultipleChoice:
                        <div class="mb-3">
                            @{
                                position = 1;
                            }
                            @foreach (var answer in question.AnswerOptions)
                            {
                                <div class="card-body mb-3">
                                    <input type="hidden" aria-label="" name="UserAnswers[@answerNumber].QuestionPosition" value="@questionNumber"/>
                                    <input type="hidden" aria-label="" name="UserAnswers[@answerNumber].Position" value="@position"/>
                                    <input type="hidden" aria-label="" name="UserAnswers[@answerNumber].QuestionId" value="@question.Id"/>
                                    <input type="checkbox" name="UserAnswers[@answerNumber].Text" value="@answer.Text" 
                                           id="answer_@(questionNumber)_@(position)">
                                    <label class="form-check-label" for="answer_@(questionNumber)_@(position)">
                                        @answer.Text
                                    </label>
                                </div>
                                answerNumber++;
                                position++;
                            }
                        </div>
                        break;
                }
            </div>
        }
        <div id="error-message" style="color: red; display: none;">Пожалуйста, заполните все поля перед отправкой.</div>
        <input class="btn btn-primary mt-3" id="submit" type="submit" value="Отправить ответы"/>
    </form>
</div>

<script>
    function validateForm() {
        const requiredFields = document.querySelectorAll('.required-field');
        let allFilled = true;

        requiredFields.forEach(field => {
            if ((field.type === 'text' && field.value.trim() === '') ||
                ((field.type === 'radio' || field.type === 'checkbox') && !document.querySelector(`input[name="${field.name}"]:checked`))) {
                allFilled = false;
            }
        });

        if (!allFilled) {
            document.getElementById('error-message').style.display = 'block';
            return false; // Останавливаем отправку формы
        } else {
            document.getElementById('error-message').style.display = 'none';
            return true;
        }
    }
</script>
<script>
    let timer = document.getElementById("timer");
    let seconds = 300;
    setInterval(() => {
        seconds--;
        let secondsString = (seconds % 60).toString();
        if (seconds %60 < 10){
            secondsString = "0" + secondsString;
        }
        
        timer.textContent = `${Math.floor(seconds / 60)}:${secondsString}`;
        if (seconds == 0){
            document.querySelector('#submit').click()
        }
    }, 1000);

    function setQuestionPosition(position, obj) {
        // Установите значение hidden input для текущего выбранного ответа
        var hiddenInput = obj.closest('.card-body').querySelector(`input[name="${obj.name.split('.')[0]}.Position"]`);
        hiddenInput.value = position;
    }
</script>
