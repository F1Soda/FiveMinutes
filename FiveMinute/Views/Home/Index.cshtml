@using FiveMinute.Data
@using Microsoft.AspNetCore.Identity
@model FiveMinute.ViewModels.HomeViewModels.IndexViewModel

@{
	// Helper method for getting status background color class
	string GetStatusClass(TestStatus status)
	{
		return status switch
		{
			TestStatus.Planned => "bg-warning", // Yellow
			TestStatus.Started => "bg-primary", // Blue
			TestStatus.InRechekingProcess => "bg-brown", // Custom brown color
			TestStatus.Completed => "bg-success", // Green
			TestStatus.Cancelled => "bg-danger", // Red
			_ => "bg-light" // Default (light background)
		};
	}

	string ConvertEnumToString(TestStatus status)
	{
		return status switch
		{
			TestStatus.Planned => "Запланирована", // Yellow
			TestStatus.Started => "Начата", // Blue
			TestStatus.InRechekingProcess => "Требует проверки", // Custom brown color
			TestStatus.Completed => "Завершена", // Green
			TestStatus.Cancelled => "Отменена", // Red
			_ => "bg-light" // Default (light background)
		};
	}
}

@if (Model != null)
{
	@if (Model.UserRole == "teacher" || Model.UserRole == "admin")
	{
		<div class="full-width-wrapper">
			<!-- Cards Row with Conditional Centering -->
			<div class="d-flex justify-content-center bg-light-blue pt-3">
				<div class="row container">
					<!-- Planned Tests Card (only if there are planned tests) -->
					@if (Model.PlannedFMTests.Any() || true)
					{
						<div class="col-md-4 mb-3">
							<div class="card text-dark">
								<div class="card-header">Запланированные Тесты</div>
								<div class="card-body">
									<ul id="plannedTestsList">
										@foreach (var test in Model.PlannedFMTests.Take(5)) // Show only the first 5
										{
											<li>
												@test.Name
												<a href="@Url.Action("Edit", "FiveMinuteTest", new { testId = test.Id })" class="btn btn-primary btn-sm ml-2">Подробнее</a>
											</li>
										}
									</ul>
									@if (Model.PlannedFMTests.Count > 5)
									{
										<button class="btn btn-link" id="expandPlannedTests" onclick="toggleList('plannedTestsList')">Показать все</button>
									}
								</div>
							</div>
						</div>
					}

					<!-- Active Tests Card (only if there are active tests) -->
					@if (Model.ActiveFMTests.Any() || true)
					{
						<div class="col-md-4 mb-3">
							<div class="card text-dark">
								<div class="card-header">Активные Тесты</div>
								<div class="card-body">
									<ul id="activeTestsList">
										@foreach (var test in Model.ActiveFMTests.Take(5)) // Show only the first 5
										{
											<li>
												@test.Name
												<a href="@Url.Action("Edit", "FiveMinuteTest", new { testId = test.Id })" class="btn btn-primary btn-sm ml-2">Подробнее</a>
											</li>
										}
									</ul>
									@if (Model.ActiveFMTests.Count > 5)
									{
										<button class="btn btn-link" id="expandActiveTests" onclick="toggleList('activeTestsList')">Показать все</button>
									}
								</div>
							</div>
						</div>
					}

					<!-- Rechecking Tests Card (only if there are tests requiring rechecking) -->
					@if (Model.RequiresRecheckingFMTests.Any() || true)
					{
						<div class="col-md-4 mb-3">
							<div class="card text-dark">
								<div class="card-header">Тесты, требующие проверки</div>
								<div class="card-body">
									<ul id="recheckingTestsList">
										@foreach (var test in Model.RequiresRecheckingFMTests.Take(5)) // Show only the first 5
										{
											<li>
												@test.Name
												<a href="@Url.Action("Edit", "FiveMinuteTest", new { testId = test.Id })" class="btn btn-primary btn-sm ml-2">Подробнее</a>
											</li>
										}
									</ul>
									@if (Model.RequiresRecheckingFMTests.Count > 5)
									{
										<button class="btn btn-link" id="expandRecheckingTests" onclick="toggleList('recheckingTestsList')">Показать все</button>
									}
								</div>
							</div>
						</div>
					}

				</div>
			</div>
		</div>

		<div class="pt-3">
			<!-- Вкладки -->
			<ul class="nav nav-tabs">
				<li class="nav-item">
					<a class="nav-link active" data-toggle="tab" href="#fiveMinuteTemplates">Шаблоны</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" data-toggle="tab" href="#fiveMinuteTests">Тесты</a>
				</li>
			</ul>

			<div class="tab-content">
				<div id="fiveMinuteTemplates" class="tab-pane fade show active">
					@if (Model.FMTemplates is not null && Model.FMTemplates.Any())
					{
						<table class="table">
							<thead>
								<tr>
									<th>ID</th>
									<th>Название</th>
									<th>Действия</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var test in Model.FMTemplates)
								{

									<tr>
										<td>@test.Id</td>
										<td>@test.Name</td>
										<td>
											<a asp-action="Edit" asp-controller="FiveMinuteTemplate" asp-route-Id="@test.Id" class="btn btn-primary">Редактировать</a>
											<button class="btn btn-danger btn-delete" data-id="@test.Id">Удалить</button>
										</td>
									</tr>

								}
							</tbody>
						</table>
					}
					else
					{
						<p>Пока тут пусто. Создайте новую!</p>
					}
					@if (Model != null)
					{
						<l1 class="nav-item">
							<a class="btn" asp-area="" asp-controller="FiveMinuteTemplate" asp-action="Create">Создать пятиминутку</a>
						</l1>
					}
				</div>

				<div id="fiveMinuteTests" class="tab-pane fade">
					<table class="table">
						<thead>
							<tr>
								<th>ID</th>
								<th>Название</th>
								<th>Статус</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tbody>
							@foreach (var test in Model.FMTests)
							{
								<tr>
									<td>@test.Id</td>
									<td>@test.Name</td>
									<td>
										<span class="badge @GetStatusClass(test.Status) text-white">
											@ConvertEnumToString(test.Status)
										</span>
									</td>
									<td>
										<a asp-action="Edit" asp-controller="FiveMinuteTest" asp-route-testId="@test.Id" class="btn btn-primary">Edit</a>
									</td>
									<td>
										<a class="btn btn-secondary" asp-area="" asp-route-testId="@test.Id" asp-controller="FiveMinuteTest" asp-action="Pass">Прохождение теста</a>
										<a class="btn btn-info" asp-area="" asp-route-testId="@test.Id" asp-controller="FiveMinuteStatistics" asp-action="ShowResults">Статистика</a>
										<a class="btn btn-info" asp-area="" asp-route-testId="@test.Id" asp-controller="FiveMinuteTest" asp-action="Detail">Подробнее</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
					@if (Model != null)
					{
						<l1 class="nav-item">
							<a class="btn btn-secondary" asp-area="" asp-controller="FiveMinuteTest" asp-action="Create">Создать тест</a>
						</l1>
					}
				</div>
			</div>
		</div>
	}
	else
	{

	}
}

@section Scripts {
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		$(document).ready(function () {
			// Bind the delete button click event
			$(".btn-delete").click(function () {
				var testId = $(this).data("id"); 

				console.log(testId);

				// if (confirm("Are you sure you want to delete this item?")) {
					// Perform the AJAX request to delete
					$.ajax({
						url: '@Url.Action("Delete", "FiveMinuteTemplate")', // URL to the Delete action
						type: 'POST',
						// data: JSON.stringify({ id: testId }), // Send the ID of the item to delete
						//contentType: 'application/json; charset=utf-8',
						//dataType: 'json',
						data: { id: testId }
						success: function (response) {
							if (response.success) {
								// Remove the row from the table if deletion is successful
								$("#test-" + testId).remove();
							} else {
								alert(response.reason);
							}
						},
						error: function (response) {
							alert(response.reason);
						}
					});
				// }
			});
		});
	</script>

	<script>
		function toggleList(listId) {
			var list = document.getElementById(listId);
			var button = document.getElementById('expand' + listId.charAt(0).toUpperCase() + listId.slice(1));

			if (list.style.display === 'none') {
				list.style.display = 'block';
				button.textContent = 'Скрыть';
			} else {
				list.style.display = 'none';
				button.textContent = 'Показать все';
			}
		}
	</script>
}




<!-- Подключение Bootstrap CSS и JS для работы вкладок -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>