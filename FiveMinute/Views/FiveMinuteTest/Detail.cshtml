@using FiveMinute.Data
@model FiveMinute.ViewModels.FiveMinuteTestViewModels.FiveMinuteTestDetailViewModel

@{
    ViewData["Title"] = "Test Details";
}

<div class="container mt-4">
    <h1>@Model.Name</h1>

    <!-- Tab Navigation -->
    <ul class="nav nav-tabs" id="testDetailTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" id="statistics-tab" data-bs-toggle="tab" href="#statistics" role="tab" aria-controls="statistics" aria-selected="true">Statistics</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="settings-tab" data-bs-toggle="tab" href="#settings" role="tab" aria-controls="settings" aria-selected="false">Settings</a>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content mt-3" id="testDetailTabsContent">
        <!-- Statistics Tab Pane -->
        <div class="tab-pane fade show active" id="statistics" role="tabpanel" aria-labelledby="statistics-tab">
            <h3>Statistics</h3>

            <div class="row">
                <div class="col-md-6">
                    <p><strong>Test Status:</strong> @Model.Status.ToString().Replace("InRechekingProcess", "In Rechecking Process")</p>
                    <p><strong>Start Time:</strong> @Model.StartTime.ToString("yyyy-MM-dd HH:mm")</p>
                    <p><strong>End Time:</strong> @Model.EndTime.ToString("yyyy-MM-dd HH:mm")</p>
                </div>
                <div class="col-md-6">
                    <h4>Statistics for Passers</h4>
                    <h6>Всего прохождений: @Model.Results.Count()</h6>

                    @foreach (var result in Model.Results)
                    {
                        var answersDict = new Dictionary<int, List<UserAnswer>>();
                        foreach (var answer in result.Answers)
                        {
                            answersDict.TryAdd(answer.QuestionPosition, new List<UserAnswer>());
                            answersDict[answer.QuestionPosition].Add(answer);
                        }

                        <table class="table table-bordered table-striped mt-3">
                            <caption>
                                <div>Id пользователя: @result.UserId</div>
                                <div>Имя пользователя: @result.UserName</div>
                                <div>Время прохождения: @result.PassTime</div>
                                <div>Всего баллов: @answersDict.Values.SelectMany(x => x).Sum(x => x.IsCorrect ? 1: 0)</div>
                                <a asp-action="FiveMinuteResult" asp-route-resultId="@result.Id">Подробнее</a>
                            </caption>
                            <thead>
                            <tr>
                                <th>Вопрос</th>
                                @foreach(var number in answersDict.Keys.Order())
                                {
                                    var someAnswer = answersDict[number].FirstOrDefault();
                                    <th>@someAnswer?.QuestionPosition. @someAnswer?.QuestionText</th>
                                }
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                                <th>Ответ</th>
                                @foreach (var number in answersDict.Keys.Order())
                                {
                                    <td>@string.Join(';', answersDict[number].Select(x => x.Text).Where(x => x != ""))</td>
                                }
                            </tr>
                            <tr>
                                <th>Балл</th>
                                @foreach (var number in answersDict.Keys.Order())
                                {
                                    <td>@answersDict[number].Sum(x => x.IsCorrect ? 1 : 0)</td>
                                }
                            </tr>
                            </tbody>
                        </table>
                    }
                </div>
            </div>

            <!-- Notification for Organizer -->
            <!--@if (Model.StartPlanned && Model.Status == TestStatus.Completed && Model.IdToUninclude.Contains(1))
            {
                <div class="alert alert-warning mt-4" role="alert">
                    <strong>Notification:</strong> A new test result has been submitted, but manual review is required.
                </div>
            }-->
        </div>

        <!-- Settings Tab Panel -->
        <div class="tab-pane fade" id="settings" role="tabpanel" aria-labelledby="settings-tab">
            <h3>Настройки теста</h3>

            <form method="post" action="@Url.Action("UpdateTestSettings", "FiveMinuteTest")">
                <input type="hidden" name="Id" value="@Model.Id" />
                <input type="hidden" name="Name" value="@Model.Name" />
                <input type="hidden" name="Status" value="@Model.Status" />
                <input type="hidden" id="IdToUninclude" name="IdToUninclude" />

                <div class="mb-4">
                    <h4>Управление вопросами</h4>
                    <div class="list-group">
                        @for (int i = 0; i < Model.AttachedFMT.Questions.Count; i++)
                        {
                            var question = Model.AttachedFMT.Questions[i];
                            bool isChecked = !Model.IdToUninclude.Contains(question.Id);
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <span class="question-text">@question.QuestionText</span>
                                </div>
                                <div class="form-check">
                                    <input type="checkbox"
                                           class="form-check-input question-checkbox"
                                           data-question-id="@question.Id"
                                           value="@question.Id"
                                           @(isChecked ? "checked" : "") />
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="mb-3">
                    <label for="startPlanned" class="form-label">Запланировать начало</label>
                    @*Этот конкретный инпут и который ниже не работают, рот их ебал*@
                    <input type="checkbox" id="startPlanned" name="StartPlanned" @(Model.StartPlanned ? "checked" : "") class="form-check-input" onchange="toggleStartTimeInput()" value="true"/>
                    <div id="startTimeInput" class="mt-2" style="display: @(Model.StartPlanned ? "block" : "none")">
                        <label for="startDateTime" class="form-label">Дата и время начала</label>
                        <input type="datetime-local" id="startDateTime" name="StartTime" class="form-control" value="@Model.StartTime.ToString("yyyy-MM-ddTHH:mm")" />
                    </div>
                </div>

                <div class="mb-3">
                    <label for="endPlanned" class="form-label">Запланировать окончание</label>
                    <input type="checkbox" id="endPlanned" name="EndPlanned" @(Model.EndPlanned ? "checked" : "") class="form-check-input" onchange="toggleEndTimeInput()" value="true"/>
                    <div id="endTimeInput" class="mt-2" style="display: @(Model.EndPlanned ? "block" : "none")">
                        <label for="endDateTime" class="form-label">Дата и время окончания</label>
                        <input type="datetime-local" id="endDateTime" name="EndTime" class="form-control" value="@Model.EndTime.ToString("yyyy-MM-ddTHH:mm")"/>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Сохранить изменения</button>
            </form>
        </div>
    </div>
</div>

<!-- Optional: Bootstrap JS for Tab Navigation -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<script src="~/js/questionCheckboxHandler.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM загружен, начинаем инициализацию...'); // Отладочная информация
        initializeQuestionCheckboxes('IdToUninclude');
        toggleEndTimeInput();
        toggleStartTimeInput();
    });
    
    function toggleStartTimeInput() {
        var startPlanned = document.getElementById('startPlanned').checked;
        
        document.getElementById('startTimeInput').style.display = startPlanned ? 'block' : 'none';
    }

    function toggleEndTimeInput() {
        var endPlanned = document.getElementById('endPlanned').checked;
        document.getElementById('endTimeInput').style.display = endPlanned ? 'block' : 'none';
    }
</script>
