@using Microsoft.AspNetCore.Identity

@using FiveMinute.ViewModels
@using Microsoft.AspNetCore.Mvc.RazorPages
@model FiveMinute.ViewModels.FMTestPassingViewModel

@{
	ViewData["Title"] = "TestPassing";
}

<style>
	label {
		display: block;
		margin-left: 5px;
	}

	.question {
		margin-bottom: 20px;
		padding: 15px;
		background-color: #fff;
		border-radius: 5px;
		box-shadow: 0 1px 3px rgba(0,0,0,0.1);
	}
</style>

<div class="container test-area">
	<h1>@Model.Name</h1>
	<form asp-action="SendTestResults" asp-controller="FiveMinuteTest" method="post">
		<input type="hidden" aria-label="" name="FMTestId" value="@Model.FMTestId" />
		@{
			var userFirstName = "";
			var userLastName = "";
			var userGroup = "";
			var registered = false;
			if (Model.UserData != null)
			{
				registered = true;
				userFirstName = Model.UserData.FirstName;
				userLastName = Model.UserData.LastName;
				userGroup = Model.UserData.Group;
			}
			var userId = Model.userId ?? "";

			<div style="margin-bottom: 10px">
				<input type="hidden" aria-label="" name="UserId" value=@userId />
				@if (!registered)
				{
					<h3>Внимание!</h3>
					<p>Незарегистрированные пользователи не смогут просмотреть результаты пройденного теста</p>
					<p>Пожалуйста заполните поля ФИО и группа</p>

					<div>
						<label asp-for="UserData.FirstName"></label>
						<input class="form-control" type="text" name="UserData.FirstName" />
						<span asp-validation-for="UserData.FirstName" class="text-danger"></span>
					</div>
					<div>
						<label asp-for="UserData.LastName"></label>
						<input class="form-control" type="text" name="UserData.LastName" />
						<span asp-validation-for="UserData.LastName" class="text-danger"></span>
					</div>
					<div>
						<label asp-for="UserData.Group"></label>
						<input class="form-control" type="text" name="UserData.Group" />
						<span asp-validation-for="UserData.Group" class="text-danger"></span>
					</div>
				}
				else
				{
					<div style="margin-bottom: 10px">
						<div>
							<label>Фамилия</label>
							<input class="form-control" type="text" name="UserData.FirstName" readonly value=@userFirstName />
							<span asp-validation-for="UserData.FirstName" class="text-danger"></span>
						</div>
						<div>
							<label>Имя</label>
							<input class="form-control" type="text" name="UserData.LastName" readonly value=@userLastName />
							<span asp-validation-for="UserData.LastName" class="text-danger"></span>
						</div>
						<div>
							<label>Группа</label>
							<input class="form-control" type="text" name="UserData.Group" readonly value=@userGroup />
							<span asp-validation-for="UserData.Group" class="text-danger"></span>
						</div>
					</div>
				}
			</div>

			var questionNumber = 0;
			var answerNumber = 0;
		}
		@foreach (var question in Model.Questions)
		{
			<div class="question card mt-3 question-card border-secondary border-3">
				<h5 class="question-text card-title mb-2">@(questionNumber + 1). @question.QuestionText</h5>
				@{
					int position;
				}
				@switch (question.ResponseType)
				{
					case ResponseType.Text:
						<div class="mb-3">
							<input type="hidden" name="UserAnswers[@answerNumber].QuestionPosition" value="@questionNumber" />
							<input type="hidden" name="UserAnswers[@answerNumber].Position" value="0" />
							<input type="hidden" name="UserAnswers[@answerNumber].QuestionId" value="@question.Id" />
							<input type="text" aria-label="@question.QuestionText" name="UserAnswers[@answerNumber].Text" />
						</div>
						answerNumber++;
						break;
					case ResponseType.SingleChoice:
						<div class="card-body mb-3">
							@{
								position = 0;
							}
							<input type="hidden" name="UserAnswers[@answerNumber].QuestionPosition" value="@questionNumber" />
							<input type="hidden" name="UserAnswers[@answerNumber].Position" value="@position" />
							<input type="hidden" name="UserAnswers[@answerNumber].QuestionId" value="@question.Id" />
							@foreach (var answer in question.AnswerOptions)
							{
								<div class="form-check">
									<input type="radio" class="form-check-input" name="UserAnswers[@answerNumber].Text" value="@answer.Text"
										   id="answer_@(questionNumber)_@(position)" onchange="setQuestionPosition(@position, this)">
									<label class="form-check-label" for="answer_@(questionNumber)_@(position)">
										@answer.Text
									</label>
								</div>
								position++;
							}
						</div>
						answerNumber++;
						break;
					case ResponseType.MultipleChoice:
						<div class="card-body mb-3">
							@{
								position = 0;
							}
							@foreach (var answer in question.AnswerOptions)
							{
								<div class="form-check">
									<input type="hidden" aria-label="" name="UserAnswers[@answerNumber].QuestionPosition" value="@questionNumber" />
									<input type="hidden" aria-label="" name="UserAnswers[@answerNumber].Position" value="@position" />
									<input type="hidden" aria-label="" name="UserAnswers[@answerNumber].QuestionId" value="@question.Id" />
									<input type="checkbox" class="form-check-input" name="UserAnswers[@answerNumber].Text" value="@answer.Text"
										   id="answer_@(questionNumber)_@(position)">
									<label class="form-check-label" for="answer_@(questionNumber)_@(position)">
										@answer.Text
									</label>
								</div>
								answerNumber++;
								position++;
							}
						</div>
						break;
				}
			</div>
			questionNumber++;
		}
		<div id="error-message" style="color: red; display: none;">Пожалуйста, заполните все поля перед отправкой.</div>
		<input class="btn btn-primary mt-3" id="submit" type="submit" value="Отправить ответы" />
	</form>
</div>
<script src="~/js/timer.js"></script>
<script>
	function validateForm() {
		const requiredFields = document.querySelectorAll('.required-field');
		let allFilled = true;

		requiredFields.forEach(field => {
			if ((field.type === 'text' && field.value.trim() === '') ||
				((field.type === 'radio' || field.type === 'checkbox') && !document.querySelector(`input[name="${field.name}"]:checked`))) {
				allFilled = false;
			}
		});

		if (!allFilled) {
			document.getElementById('error-message').style.display = 'block';
			return false; // Останавливаем отправку формы
		} else {
			document.getElementById('error-message').style.display = 'none';
			return true;
		}
	}
</script>
<script>
	function setQuestionPosition(position, obj) {
		// Установите значение hidden input для текущего выбранного ответа
		var hiddenInput = obj.closest('.card-body').querySelector(`input[name="${obj.name.split('.')[0]}.Position"]`);
		hiddenInput.value = position;
	}
</script>
