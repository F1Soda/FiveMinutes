@model FiveMinuteTemplate

@{
	ViewData["Title"] = "Создание пятиминутки";
}

<h1>Редактор пятиминутки</h1>

<form asp-action="Create" method="post">
	<div class="form-group">
		<label asp-for="Name">Название пятиминутки:</label>
		<input asp-for="Name" class="form-control" required />
		<span asp-validation-for="Name" class="text-danger"></span>
	</div>

	<div id="questions-container">
		<!-- Здесь будут динамически добавляться вопросы -->
	</div>

	<button type="button" id="add-question" class="btn btn-primary mt-3">Добавить вопрос</button>
	<button type="submit" class="btn btn-success mt-3">Сохранить пятиминутку</button>
</form>

@section Scripts {
	<script>
		let questionCount = 0;

		function addQuestion() {
			questionCount++;
			const questionHtml = `
						<div class="card mt-3">
							<div class="card-body">
								<h5 class="card-title">Вопрос ${questionCount}</h5>
								<div class="form-group">
									<label>Текст вопроса:</label>
									<input type="text" name="Questions[${questionCount - 1}].QuestionText" class="form-control" required />
								</div>
								<div class="form-group">
									<label>Тип ответа:</label>
									<select name="Questions[${questionCount - 1}].ResponseType" class="form-control" onchange="handleResponseTypeChange(this)">
										<option value="0">Один вариант</option>
										<option value="1">Несколько вариантов</option>
										<option value="2">Текстовый ответ</option>
									</select>
								</div>
								<div class="answers-container mt-2">
									<!-- Здесь будут динамически добавляться варианты ответов -->
								</div>
								<button type="button" class="btn btn-secondary mt-2" onclick="addAnswer(this)">Добавить вариант ответа</button>
							</div>
						</div>
					`;
			document.getElementById('questions-container').insertAdjacentHTML('beforeend', questionHtml);
		}

		function handleResponseTypeChange(select) {
			const answersContainer = select.closest('.card-body').querySelector('.answers-container');
			const addAnswerButton = select.closest('.card-body').querySelector('button');

			answersContainer.innerHTML = '';
			if (select.value === "2") { // Текстовый ответ
				addAnswerButton.style.display = 'none';
			} else {
				addAnswerButton.style.display = 'block';
			}
		}

		function addAnswer(button) {
			const questionCard = button.closest('.card');
			const questionIndex = Array.from(questionCard.parentNode.children).indexOf(questionCard);
			const answersContainer = questionCard.querySelector('.answers-container');
			const answerCount = answersContainer.children.length;

			const answerHtml = `
						<div class="form-group">
							<label>Вариант ответа ${answerCount + 1}:</label>
							<input type="text" name="Questions[${questionIndex}].Answers[${answerCount}].Text" class="form-control" required />
							<div class="form-check">
								<input class="form-check-input" type="checkbox" name="Questions[${questionIndex}].Answers[${answerCount}].IsCorrect" id="isCorrect${questionIndex}_${answerCount}">
								<label class="form-check-label" for="isCorrect${questionIndex}_${answerCount}">
									Правильный ответ
								</label>
							</div>
						</div>
					`;
			answersContainer.insertAdjacentHTML('beforeend', answerHtml);
		}

		document.getElementById('add-question').addEventListener('click', addQuestion);


		let saveInterval = setInterval(function () {
			saveChanges();
		}, 5000);

		function saveChanges() {
			var data = {
				name: $("#name").val(),
				questions: getQuestionsData(), // Implement this function to get the questions data
				showInProfile: $("#showInProfile").is(":checked")
			};

			$.ajax({
				type: "POST",
				url: "/YourController/SaveTestData",
				data: JSON.stringify(data),
				contentType: "application/json",
				success: function (response) {
					console.log(response);
				},
				error: function (error) {
					console.log(error);
				}
			});
		}
	</script>
}